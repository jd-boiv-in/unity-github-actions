name: Release (build all)

# Hit a limit on number of referenced workflows (20)...
# Will need to change "yearly-version" to be an action instead...

# Enabled doesn't work as well...
# Anyway, I won't personaly use this one as I prefer the variant that downloads internal releases instead.

# TODO: Pass `enabled` to `ref` workflow, will do a simple "echo" in a job and skip the rest

# Compile all platforms and create a release in github
on: 
  workflow_dispatch:
    inputs:
      notes:
        type: string
        description: Release Notes
      build-windows:
        description: "Build Windows"
        type: choice
        default: 'false'
        options:
          - true
          - false
      build-windows-mono:
        description: "Build Windows (mono)"
        type: choice
        default: 'false'
        options:
          - true
          - false
      build-macos:
        description: "Build macOS"
        type: choice
        default: 'false'
        options:
          - true
          - false
      build-macos-mono:
        description: "Build macOS (mono)"
        type: choice
        default: 'false'
        options:
          - true
          - false
      build-linux:
        description: "Build Linux"
        type: choice
        default: 'false'
        options:
          - true
          - false
      build-linux-mono:
        description: "Build Linux (mono)"
        type: choice
        default: 'false'
        options:
          - true
          - false
      build-webgl:
        description: "Build WebGL"
        type: choice
        default: 'false'
        options:
          - true
          - false
      build-android:
        description: "Build Android"
        type: choice
        default: 'false'
        options:
          - true
          - false
      build-ios:
        description: "Build iOS"
        type: choice
        default: 'false'
        options:
          - true
          - false
  workflow_call:
    inputs:
      notes:
        default: ''
        type: string
      build-windows:
        default: 'false'
        type: string
      build-windows-mono:
        default: 'false'
        type: string
      build-macos:
        default: 'false'
        type: string
      build-macos-mono:
        default: 'false'
        type: string
      build-linux:
        default: 'false'
        type: string
      build-linux-mono:
        default: 'false'
        type: string
      build-webgl:
        default: 'false'
        type: string
      build-android:
        default: 'false'
        type: string
      build-ios:
        default: 'false'
        type: string

jobs:
  version: # Get current version
    uses: jd-boiv-in/yearly-version/.github/workflows/version.yml@v1
    secrets: inherit
    with:
      runner: 'ubuntu-latest'
  
  version_increment: # Increment only if release is successful
    uses: jd-boiv-in/yearly-version/.github/workflows/version.yml@v1
    needs: [release]
    secrets: inherit
    with:
      increment: false # true
      runner: 'ubuntu-latest'

  build-android:
    uses: ./.github/workflows/android.yml
    secrets: inherit
    with:
      notes: ${{ inputs.notes }}
      upload-artifact: 'true'
      release: 'true'
      enabled: ${{ inputs.build-android }}
      
  build-ios:
    uses: ./.github/workflows/ios.yml
    secrets: inherit
    with:
      notes: ${{ inputs.notes }}
      upload-artifact: 'true'
      release: 'true'
      enabled: ${{ inputs.build-ios }}

  build-windows-mono:
    uses: ./.github/workflows/windows_mono.yml
    secrets: inherit
    with:
      notes: ${{ inputs.notes }}
      upload-artifact: 'true'
      release: 'true'
      enabled: ${{ inputs.build-windows-mono }}
  
  #build-windows:
  #  uses: ./.github/workflows/windows.yml
  #  secrets: inherit
  #  with:
  #    notes: ${{ inputs.notes }}
  #    upload-artifact: 'true'
  #    release: 'true'
  #    enabled: ${{ inputs.build-windows }}

  build-macos-mono:
    uses: ./.github/workflows/macos_mono.yml
    secrets: inherit
    with:
      notes: ${{ inputs.notes }}
      upload-artifact: 'true'
      release: 'true'
      enabled: ${{ inputs.build-macos-mono }}

  #build-macos:
  #  uses: ./.github/workflows/macos.yml
  #  secrets: inherit
  #  with:
  #    notes: ${{ inputs.notes }}
  #    upload-artifact: 'true'
  #    release: 'true'
  #    enabled: ${{ inputs.build-macos }}

  build-linux-mono:
    uses: ./.github/workflows/linux_mono.yml
    secrets: inherit
    with:
      notes: ${{ inputs.notes }}
      upload-artifact: 'true'
      release: 'true'
      enabled: ${{ inputs.build-linux-mono }}

  #build-linux:
  #  uses: ./.github/workflows/linux.yml
  #  secrets: inherit
  #  with:
  #    notes: ${{ inputs.notes }}
  #    upload-artifact: 'true'
  #    release: 'true'
  #    enabled: ${{ inputs.build-linux }}
  
  build-webgl:
    uses: ./.github/workflows/webgl.yml
    secrets: inherit
    with:
      notes: ${{ inputs.notes }}
      upload-artifact: 'true'
      release: 'true'
      enabled: ${{ inputs.build-webgl }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [version, build-webgl, build-windows-mono, build-macos-mono, build-linux-mono, build-android, build-ios] # , build-windows, build-macos, build-linux
    steps:
      - uses: actions/checkout@v4
      
      - name: Test
        run: |
          echo "LOL!"

      #- name: Generate Changelog
      #  if: ${{ inputs.notes != '' }}
      #  run: echo "${{ inputs.notes }}" > RELEASE.txt
      #  
      #- name: Generate Changelog (empty)
      #  if: ${{ inputs.notes == '' }}
      #  run: echo "No notes" > RELEASE.txt
      #
      #- name: Download artifacts
      #  uses: actions/download-artifact@v4
      #  with:
      #    name: build-windows-mono
      #    path: build-windows-mono
      #
      #- name: Release
      #  uses: starburst997/release-action@v1
      #  with:
      #    bodyFile: RELEASE.txt
      #    token: ${{ secrets.GH_PAT }}
      #    tag: v${{ needs.version.outputs.version }} - [${{ needs.version.outputs.commit-sha }}](${{ needs.version.outputs.commit-url }})
      #    replacesArtifacts: true
      #    allowUpdates: true
      #    artifacts: "build-windows-mono/*"
      #
      #- name: Calculate duration
      #  run: |
      #    printf -v now '%(%s)T'
      #    duration=$((now - ${{ needs.version.outputs.time }}))
      #    echo "DURATION=$(echo $duration | awk '{printf "%02d:%02d:%02d", $1/3600, ($1/60)%60, $1%60}')" >> $GITHUB_ENV
      #
      #- id: vars
      #  run: echo "discord=${{ secrets.DISCORD_WEBHOOK != '' }}" >> $GITHUB_OUTPUT
      #- run: |
      #    echo "LINKS=${{ needs.build-windows-mono.outputs.links }}" >> $GITHUB_ENV
      #
      #- name: Release notes
      #  if: ${{ inputs.notes != '' }}
      #  run: echo NOTES="${{ inputs.notes }}" >> $GITHUB_ENV
      #- if: ${{ inputs.notes == '' }}
      #  run: echo NOTES="No notes" >> $GITHUB_ENV
      #
      #- uses: starburst997/get-previous-action@v1
      #  id: previous
      #  with:
      #    token: ${{ secrets.GH_PAT }}
      #
      #- name: Discord Notification
      #  if: ${{ steps.vars.outputs.discord == 'true' }}
      #  uses: starburst997/discord-webhook-notify@v2
      #  with:
      #    severity: info
      #    color: '#00FF00'
      #    text: "**Release**: Everything was built!"
      #    description: "${{ env.NOTES }}\n"
      #    footer: "Build time: ${{ env.DURATION }}"
      #    details: "Download:${{ env.LINKS }}\n\nv${{ needs.version.outputs.version }} - [${{ needs.version.outputs.commit-sha }}](${{ needs.version.outputs.commit-url }}) ([diff](${{ steps.previous.outputs.diff-url }}))"
      #    webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
      #    username: ${{ vars.DISCORD_USERNAME }}
      #    avatarUrl: ${{ vars.DISCORD_AVATAR }}
      #
      #- name: Delete artifacts
      #  if: always()
      #  uses: starburst997/delete-artifact@v5
      #  with:
      #    name: build-windows-mono

  failure:
    name: Failure
    runs-on: ${{ inputs.runner-extra }}
    if: failure()
    needs: [version, version, build-webgl, build-windows-mono, build-macos-mono, build-linux-mono, build-android, build-ios, release] # , build-windows, build-macos, build-linux
    steps:
      - name: Calculate duration
        run: |
          printf -v now '%(%s)T'
          duration=$((now - ${{ needs.version.outputs.time }}))
          echo "DURATION=$(echo $duration | awk '{printf "%02d:%02d:%02d", $1/3600, ($1/60)%60, $1%60}')" >> $GITHUB_ENV
      - name: Discord Notification
        uses: starburst997/discord-webhook-notify@v2
        if: ${{ env.DISCORD_WEBHOOK != '' }}
        with:
          severity: error
          color: "#FF0000"
          text: "**Failure**: ${{ inputs.discord }} build failed!"
          description: "Build failed!\n"
          footer: "Build time: ${{ env.DURATION }}"
          details: "Links:\n- [Action Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\nv${{ needs.version.outputs.version }}"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          username: ${{ vars.DISCORD_USERNAME }}
          avatarUrl: ${{ vars.DISCORD_AVATAR }}